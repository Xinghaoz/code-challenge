package com.shutterfly.www.event;

import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public abstract class Event {
	private EventType type;
	private VerbType verb;
	private String customerId;
	private Date eventTime;
	
	public Event(EventType type, VerbType verb, String customerId, Date eventTime) {
		this.type = type;
		this.verb = verb;
		this.customerId = customerId;
		this.eventTime = eventTime;
	}
	
	public enum EventType {
		CUSTOMER("CUSTOMER"),
		SITE_VISIT("SITE_VISIT"),
		IMAGE("IMAGE"),
		ORDER("ORDER");
		
		private final String str;
		
		EventType(String event) {
			this.str = event;
		}
	}
	
	public enum VerbType {
		NEW,
		UPDATE,
		UPLOAD;
	}	
	
    /**
     * Manage events generated by the input.
     *
     * I am implementing this as a nested class of Event so that
     * the public methods will not be exposed as part of the client API.
     */
	public static class CustomerEvent extends Event {
		String lastName;
		String adrCity;
		String adrState;
		
		public CustomerEvent(EventType type, VerbType verb, String customerId, Date eventTime) {
			super(type, verb, customerId, eventTime);	
		}
		
		public void setLastName(String name) {
			this.lastName = name;
		}
		
		public void setAdrCity(String city) {
			this.adrCity = city;
		}
		
		public void setAdrState(String state) {
			this.adrCity = state;
		}
	}
	
	public static class SiteVisitEvent extends Event {
		String pageId;
		Map<String, String> tags;
		
		public SiteVisitEvent(EventType type, VerbType verb, String customerId, Date eventTime) {
			super(type, verb, customerId, eventTime);	
			this.tags = new HashMap<>();
		}
				
		public void addTag(String key, String value) {
			this.tags.put(key, value);
		}
	}
	
	public static class ImageUploadEvent extends Event {
		String imageId;
		String cameraMake;
		String cameraModel;
		
		public ImageUploadEvent(EventType type, VerbType verb, String customerId, Date eventTime) {
			super(type, verb, customerId, eventTime);	
		}
		
		public void setCameraMake(String cameraMake) {
			this.cameraMake = cameraMake;
		}
		
		public void setCameraModel(String cameraModel) {
			this.cameraModel = cameraModel;
		}
	}
	
	public static class OrderEvent extends Event {
		String orderId;
		double totalAmount;
		
		public OrderEvent(EventType type, VerbType verb, String customerId, Date eventTime) {
			super(type, verb, customerId, eventTime);	
		}
	}
	
}
